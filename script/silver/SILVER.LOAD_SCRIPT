CREATE OR ALTER PROCEDURE silver.load_silver AS
BEGIN
    DECLARE @START_TIME DATETIME, @END_TIME DATETIME;
    BEGIN TRY
        SET @START_TIME = GETDATE();

        PRINT '=============================================';
        PRINT '        LOADING SILVER LAYER STARTED         ';
        PRINT '=============================================';

        -- CRM SECTION
        PRINT '---------------------------------------------';
        PRINT '         PROCESSING CRM TABLES               ';
        PRINT '---------------------------------------------';

        -- 1. silver.crm_cust_info
        PRINT '>> TRUNCATING TABLE: silver.crm_cust_info';
        TRUNCATE TABLE silver.crm_cust_info;

        PRINT '>> INSERTING INTO: silver.crm_cust_info';
        INSERT INTO silver.crm_cust_info (
            cst_id,
            cst_key,
            cst_firstname,
            cst_lastname,
            cst_marital_status,
            cst_gndr,
            cse_create_date
        )
        SELECT 
            cst_id,
            cst_key,
            TRIM(cst_fiestname),
            TRIM(cst_lastname),
            CASE 
                WHEN UPPER(cst_material_status) = 'M' THEN 'Married'
                WHEN UPPER(cst_material_status) = 'S' THEN 'Single'
                ELSE 'n/a'
            END,
            CASE 
                WHEN UPPER(cst_gndr) = 'M' THEN 'Male'
                WHEN UPPER(cst_gndr) = 'F' THEN 'Female'
                ELSE 'n/a'
            END,
            cse_create_date
        FROM (
            SELECT *,
                ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY cse_create_date ASC) AS rank_num
            FROM bronze.crm_cust_info
        ) t
        WHERE rank_num = 1 AND cst_id IS NOT NULL;

        -- 2. silver.crm_sales_details
        PRINT '>> TRUNCATING TABLE: silver.crm_sales_details';
        TRUNCATE TABLE silver.crm_sales_details;

        PRINT '>> INSERTING INTO: silver.crm_sales_details';
        INSERT INTO silver.crm_sales_details (
            sls_ord_num,
            sls_prd_key,
            sls_cust_id,
            sls_order_dt,
            sls_ship_dt,
            sls_due_dt,
            sls_sales,
            sls_quantity,
            sls_price
        )
        SELECT 
            sls_ord_num,
            sls_prd_key,
            sls_cust_id,
            CASE 
                WHEN sls_order_dt = 0 OR LEN(sls_order_dt) != 8 THEN NULL 
                ELSE CAST(CAST(sls_order_dt AS VARCHAR) AS DATE)
            END,
            sls_ship_dt,
            sls_due_dt,
            CASE 
                WHEN sls_sales IS NULL OR sls_sales <= 0 OR sls_quantity IS NULL OR sls_price IS NULL OR sls_sales != sls_quantity * ABS(sls_price)
                THEN sls_quantity * ABS(sls_price)
                ELSE sls_sales 
            END,
            CASE 
                WHEN sls_quantity IS NULL OR sls_quantity <= 0 OR sls_price IS NULL OR ABS(sls_price) = 0 OR sls_quantity != sls_sales / ABS(sls_price)
                THEN ABS(sls_sales) / ABS(sls_price)
                ELSE sls_quantity 
            END,
            CASE 
                WHEN sls_price IS NULL OR sls_price <= 0 OR sls_quantity IS NULL OR sls_quantity = 0 OR sls_price != sls_sales / sls_quantity
                THEN sls_sales / sls_quantity
                ELSE sls_price 
            END
        FROM bronze.crm_sales_details;

        -- 3. silver.crm_prd_info
        PRINT '>> TRUNCATING TABLE: silver.crm_prd_info';
        TRUNCATE TABLE silver.crm_prd_info;

        PRINT '>> INSERTING INTO: silver.crm_prd_info';
        INSERT INTO silver.crm_prd_info (
            prd_id,
            cat_id,
            prd_key,
            prd_nm,
            prd_cost,
            prd_line,
            prd_start_dt,
            prd_end_dt
        )
        SELECT 
            prd_id,
            REPLACE(SUBSTRING(prd_key, 1, 5), '-', '_'),
            SUBSTRING(prd_key, 7, LEN(prd_key)),
            prd_nm,
            prd_cost,
            CASE 
                WHEN UPPER(prd_line) = 'R' THEN 'Road'
                WHEN UPPER(prd_line) = 'M' THEN 'Mountain'
                WHEN UPPER(prd_line) = 'T' THEN 'Touring'
                WHEN UPPER(prd_line) = 'S' THEN 'Other Sales'
                ELSE 'N/A'
            END,
            CAST(prd_start_dt AS DATE),
            CAST(
                LEAD(prd_start_dt) OVER (
                    PARTITION BY prd_key 
                    ORDER BY prd_start_dt ASC
                ) - 1 AS DATE
            )
        FROM bronze.crm_prd_info;

        -- ERP SECTION
        PRINT '---------------------------------------------';
        PRINT '         PROCESSING ERP TABLES               ';
        PRINT '---------------------------------------------';

        -- 1. silver.erp_loc_a101
        PRINT '>> TRUNCATING TABLE: silver.erp_loc_a101';
        TRUNCATE TABLE silver.erp_loc_a101;

        PRINT '>> INSERTING INTO: silver.erp_loc_a101';
        INSERT INTO silver.erp_loc_a101 (
            cid,
            cntry
        )
        SELECT 
            REPLACE(cid, '-', ''),
            CASE 
                WHEN UPPER(TRIM(cntry)) IN ('US', 'USA', 'UNITED STATE') THEN 'United States'
                WHEN UPPER(TRIM(cntry)) IN ('DE') THEN 'Germany'
                WHEN UPPER(TRIM(cntry)) = '' OR cntry IS NULL THEN 'n/a'
                ELSE cntry
            END
        FROM bronze.erp_loc_a101;

        -- 2. silver.erp_cust_az12
        PRINT '>> TRUNCATING TABLE: silver.erp_cust_az12';
        TRUNCATE TABLE silver.erp_cust_az12;

        PRINT '>> INSERTING INTO: silver.erp_cust_az12';
        INSERT INTO silver.erp_cust_az12 (
            cid,
            bdate,
            gen
        )
        SELECT 
            CASE 
                WHEN cid LIKE 'NAS%' THEN SUBSTRING(cid, 4, LEN(cid))
                ELSE cid 
            END,
            CASE 
                WHEN bdate >= GETDATE() THEN NULL 
                ELSE bdate 
            END,
            CASE 
                WHEN UPPER(TRIM(gen)) IN ('F', 'FEMALE') THEN 'Female'
                WHEN UPPER(TRIM(gen)) IN ('M', 'MALE') THEN 'Male'
                ELSE 'n/a'
            END
        FROM bronze.erp_cust_az12;

        -- 3. silver.erp_pz_cat_g1v2
        PRINT '>> TRUNCATING TABLE: silver.erp_pz_cat_g1v2';
        TRUNCATE TABLE silver.erp_pz_cat_g1v2;

        PRINT '>> INSERTING INTO: silver.erp_pz_cat_g1v2';
        INSERT INTO silver.erp_pz_cat_g1v2 (
            id,
            cat,
            subcat,
            maintenance
        )
        SELECT 
            id,
            cat,
            subcat,
            maintenance
        FROM bronze.erp_pz_cat_g1v2;

        SET @END_TIME = GETDATE();
        PRINT '=============================================';
        PRINT '  SILVER LOAD COMPLETED IN ' + CAST(DATEDIFF(SECOND, @START_TIME, @END_TIME) AS VARCHAR(10)) + ' SECONDS';
        PRINT '=============================================';

    END TRY
    BEGIN CATCH
        PRINT '=============================================';
        PRINT 'ERROR IN SILVER LAYER LOAD';
        PRINT '=============================================';
        PRINT 'ERROR MESSAGE: ' + ERROR_MESSAGE();
        PRINT 'ERROR NUMBER : ' + CAST(ERROR_NUMBER() AS VARCHAR(10));
    END CATCH
END


